@using System.Globalization

@inject IJSRuntime js
@inject IConfiguration AppConfiguration
@inject NavigationManager Navigation

<label for="culture-selector">Select Locale</label>
<TelerikDropDownList Data="@SupportedCultures"
                     @bind-Value="@SelectedCulture"
                     TextField="Value"
                     ValueField="Key"
                     Id="culture-selector"
                     OnChange="@ApplySelectedCultureAsync"
                     Width="15em" />

@code {
    private Dictionary<string, string?> SupportedCultures { get; set; } = new();

    private string SelectedCulture { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        SupportedCultures = AppConfiguration.GetSection("Cultures")
            .GetChildren().ToDictionary(x => x.Key, x => x.Value);

        SelectedCulture = CultureInfo.CurrentCulture.Name;
    }

    private async Task ApplySelectedCultureAsync(object newValue)
    {
        if (CultureInfo.CurrentCulture.Name != SelectedCulture && !string.IsNullOrEmpty(SelectedCulture))
        {
            await js.InvokeVoidAsync("blazorCulture.set", SelectedCulture);

            string cultureEscaped = Uri.EscapeDataString(SelectedCulture);
            string uri = new Uri(Navigation.Uri)
            .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
            string uriEscaped = Uri.EscapeDataString(uri);

            Navigation.NavigateTo(
                $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
                forceLoad: true);
        }
    }
}